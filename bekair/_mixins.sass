/// Remove the unit of a length
/// @param {Number} $number - Number to remove unit from
/// @return {Number} - Unitless number
@function strip-unit($number)
  @if type-of($number) == 'number' and not unitless($number)
    @return $number / ($number * 0 + 1)
  @return $number

@function em($wanted, $base: 16)
  @return (strip-unit($wanted) / strip-unit($base)) * 1em

@function rem($wanted, $base: 16)
  @return (strip-unit($wanted) / strip-unit($base)) * 1rem

@function percent($wanted, $context)
  @return (strip-unit($wanted) / strip-unit($context) * 100) * 1%

=fastTransition($props, $duration: .15s, $timing: ease-in-out)
  transition-property: join((), $props, comma)
  transition-duration: $duration
  transition-timing-function: $timing

=clearfix()
  &:after
    content: ""
    display: table
    clear: both

=placeholder
  &::-webkit-input-placeholder
    @content
  &:-moz-placeholder
    @content
  &::-moz-placeholder
    @content
  &:-ms-input-placeholder
    @content

=adaptivity($media)
  $screen-size-laptop-large: 1440px
  $screen-size-laptop: 1100px
  $screen-size-tablet: 768px
  $screen-size-phone: 515px
  @if $media == desktop
    @media only screen and (min-width: $screen-size-laptop-large)
      @content

  @if $media == laptop-large
    @media only screen and (max-width: $screen-size-laptop-large)
      @content

  @else if $media == laptop
    @media only screen and (max-width: $screen-size-laptop)
      @content

  @else if $media == only-laptop
    @media only screen and (min-width: $screen-size-tablet) and (max-width: $screen-size-laptop)
      @content

  @else if $media == tablet
    @media only screen and (max-width: $screen-size-tablet)
      @content

  @else if $media == phone
    @media only screen and (max-width: $screen-size-phone)
      @content

//https://gist.github.com/jonathantneal/d0460e5c2d5d7f9bc5e6
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "")
  $index: str-index($string, $search)
  @if $index
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace)
  @return $string

// =============================================================================
// Font Face
// =============================================================================


=font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg)

  $src: null
  $extmods: (eot: "?", svg: "#" + str-replace($name, " ", "_"))
  $formats: (otf: "opentype", ttf: "truetype")

  @each $ext in $exts
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext)
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext)
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma)

  @font-face
    font-family: quote($name)
    font-style: $style
    font-weight: $weight
    src: $src

